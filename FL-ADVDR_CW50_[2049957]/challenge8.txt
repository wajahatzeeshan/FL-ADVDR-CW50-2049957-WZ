Hands-on exercise 8: Using Docker security tools to audit container security



Step 1: Install Docker Bench
Clone the Docker Bench Security repository from GitHub by running the following command in the root(your username) folder:

git clone https://github.com/docker/docker-bench-security.git

Change into the cloned directory by running the command:

cd docker-bench-security

Run the Docker Bench container by running the command:

docker build -t docker-bench-security .

This command will build a Docker image named docker-bench-security from the Dockerfile in the current directory.


Step 2: Run Docker Bench
Once you have installed Docker Bench, you can run it by executing the following command:

sudo docker run -it --net host --pid host --userns host --cap-add audit_control  -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST -v /var/lib:/var/lib -v /var/run/docker.sock:/var/run/docker.sock --label docker_bench_security docker-bench-security  


This command will run Docker Bench and audit the security of your Docker containers.   


Step 3: Review the results


After Docker Bench has completed the audit, it will generate a report detailing any security issues that were found. The report is divided into sections, with each section corresponding to a different aspect of Docker container security.


Here are some of the sections you may see in the report:
• Host Configuration: This section checks the host system's configuration for security issues that can affect Docker container security, such as kernel parameters and system services.
• Docker Daemon Configuration: This section checks the configuration of the Docker daemon for security issues, such as using the latest version of Docker and disabling legacy registry protocols.
• Docker Container Configuration: This section checks the configuration of individual Docker containers for security issues, such as running containers as a non-root user and disabling privileged mode.
• Docker Image and Build Configuration: This section checks the configuration of Docker images and build processes for security issues, such as using trusted base images and enabling content trust.
Each section will have a status indicator (either "pass," "warn," or "fail") and a detailed description of any issues that were found.

OPTIONAL TASK: you can look for some of the fail/warn statuses and try to fix them
